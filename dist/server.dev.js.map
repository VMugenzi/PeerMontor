{"version":3,"sources":["server.js"],"names":["dotenv","config","path","app","use","bodyParser","json","userRouter","sessionRouter","req","res","status","send","message","databaseUrl","process","env","DATABASE","mongoose","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","then","console","log","port","PORT","listen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,mBAAOC,MAAP,CAAc;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAd;;AACA,IAAMC,GAAG,GAAC,0BAAV;AAGAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,qBAAR,EAA8BG,qBAA9B;AACAJ,GAAG,CAACC,GAAJ,CAAQ,wBAAR,EAAiCI,wBAAjC;AACAL,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAY,UAACK,GAAD,EAAKC,GAAL,EAAW;AACbA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACrBD,IAAAA,MAAM,EAAC,GADc;AAErBE,IAAAA,OAAO,EAAC;AAFa,GAArB;AAIT,CALD;AAOA,IAAMC,WAAW,GAACC,OAAO,CAACC,GAAR,CAAYC,QAA9B;;AACAC,qBAASC,OAAT,CAAiBL,WAAjB,EAA6B;AAACM,EAAAA,eAAe,EAAE,IAAlB;AAAuBC,EAAAA,cAAc,EAAC,IAAtC;AAA2CC,EAAAA,kBAAkB,EAAC,IAA9D;AAAmEC,EAAAA,gBAAgB,EAAE;AAArF,CAA7B,EAA0HC,IAA1H,CAA+H;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAAJ;AAAA,CAA/H;;AAEA,IAAMC,IAAI,GAAEZ,OAAO,CAACC,GAAR,CAAYY,IAAxB;AAEAzB,GAAG,CAAC0B,MAAJ,CAAWF,IAAX,EAAgB,YAAI;AAChB;AACAF,EAAAA,OAAO,CAACC,GAAR,gCAAoCC,IAApC;AAEH,CAJD;eAOexB,G","sourcesContent":["import express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport dotenv from \"dotenv\";\r\nimport userRouter from \"./server/Routes/UserRoute\";\r\nimport sessionRouter from \"./server/Routes/SessionRoute.js\";\r\nimport bodyParser from\"body-parser\";\r\n\r\ndotenv.config({path: './.env'});\r\nconst app=express();\r\n\r\n\r\napp.use(bodyParser.json());\r\napp.use(\"/PeerMontor/v1/user\",userRouter);\r\napp.use(\"/PeerMontor/v1/session\",sessionRouter);\r\napp.use('/',(req,res)=>{\r\n          res.status(404).send({\r\n          status:404,\r\n          message:\"This Route does not exist\"\r\n    })\r\n})\r\n\r\nconst databaseUrl=process.env.DATABASE;\r\nmongoose.connect(databaseUrl,{useNewUrlParser: true,useCreateIndex:true,useUnifiedTopology:true,useFindAndModify: false}).then(()=>console.log(\"Database connected sucessfully\"));\r\n\r\nconst port= process.env.PORT;\r\n\r\napp.listen(port,()=>{\r\n    //console.log(databaseUrl)\r\n    console.log(`Server is running on ${port}`);\r\n\r\n});\r\n\r\n\r\nexport default app;\r\n"],"file":"server.dev.js"}