{"version":3,"sources":["UserRoute.js"],"names":["_express","_interopRequireDefault","require","_Validator","_UserController","_Datachecker","_verifyToken","_verifyAccess","userRouter","express","Router","post","Validator","newAccountRules","validateInput","Datachecker","validateEmailDuplication","checkAge","userController","signupUser","get","verifyToken","getOneUser","getAllUsers","updateOneUserRole","patch","updateOneUser","getAllMentors"],"mappings":"2FAAA,IAAAA,SAAAC,uBAAAC,QAAA,YACAC,WAAAF,uBAAAC,QAAA,gCACAE,gBAAAH,uBAAAC,QAAA,kCACAG,aAAAJ,uBAAAC,QAAA,kCACAI,aAAAL,uBAAAC,QAAA,kCACAK,cAAAN,uBAAAC,QAAA,wGAHA,IAAAM,WAAAC,SAAAA,QAAAC,SACAF,WAAAG,KAAA,UAWAC,WAAAA,QAAUC,kBAVVD,WAAAA,QAAAE,cAYAC,aAAAA,QAAYC,yBAXZD,aAAAA,QAAAE,SAaAC,gBAAAA,QAAeC,YAPfX,WAAMA,IAAU,OAAGC,gBAAAA,QAAQC,aAW3BF,WAAWY,IAAI,OAAOC,aAAAA,SAAY,EAAAd,cAAA,SAAa,QAAQW,gBAAAA,QAAeI,YATtEd,WAAWG,MAAK,OAAAO,gBAAAA,QAChBN,eAOAJ,WAAWY,MAAI,YAAOF,aAAAA,SAAAA,EAAAA,cAAAA,SAAeK,SAArCL,gBAAAA,QAAAM,mBACAhB,WAAU,OAAK,OAAOa,gBAAAA,QAAAA,eACtBb,WAAWiB,IAAAA,cAAaP,aAAAA,SAAAA,EAAAA,cAAAA,SAAeQ,QAAAA,gBAAAA,QAAvCC,eACAnB,WAAWiB,KAAX,UAAiBP,gBAAAA,QAAYG,yBAEdb","file":"UserRoute.min.js","sourcesContent":["import express from \"express\";\r\nimport Validator from \"../Middlewares/Validator.js\";\r\nimport userController from \"../Controllers/UserController\";\r\nimport Datachecker from \"../Middlewares/Datachecker.js\";\r\nimport verifyToken from \"../Middlewares/verifyToken.js\";\r\nimport verifyAccess from \"../Middlewares/verifyAccess\";\r\n\r\n\r\n\r\n\r\n\r\nconst userRouter = express.Router();\r\n\r\nuserRouter.post(\"/signup\",\r\nValidator.newAccountRules(),\r\nValidator.validateInput,\r\nDatachecker.validateEmailDuplication,\r\nDatachecker.checkAge,\r\nuserController.signupUser);\r\n\r\n\r\nuserRouter.get(\"/all\",userController.getAllUsers);\r\nuserRouter.get(\"/:id\",verifyToken,verifyAccess(\"user\"),userController.getOneUser);\r\nuserRouter.patch(\"/:id\",userController.updateOneUser);\r\nuserRouter.patch(\"/:id/role\",verifyToken,verifyAccess(\"admin\"),userController.updateOneUserRole);\r\nuserRouter.delete(\"/:id\",userController.deleteOneUser);\r\nuserRouter.get(\"/all/mentor\", verifyToken, verifyAccess(\"user\"),userController.getAllMentors);\r\nuserRouter.post(\"/signin\", userController.signinUser);\r\n\r\nexport default userRouter;"]}